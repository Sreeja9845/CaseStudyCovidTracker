{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SREENA\\\\Downloads\\\\UI_Backend\\\\CvdTrackerUI\\\\src\\\\components\\\\editDisease.jsx\",\n    _s = $RefreshSig$();\n\nimport { FormControl, Grid, Input, InputLabel, Snackbar } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport * as React from 'react';\nimport { editDiseases } from '../util/apiCalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditDisease(_ref) {\n  _s();\n\n  let {\n    editDiseaseModal,\n    diseaseId,\n    diseaseNameFromDb,\n    virusNameFromDb,\n    varientNameFromDb\n  } = _ref;\n  const [diseaseName, setDiseaseName] = React.useState(diseaseNameFromDb);\n  const [virusName, setVirusName] = React.useState(virusNameFromDb);\n  const [varientName, setVarientName] = React.useState(varientNameFromDb);\n  const [snackMessage, setSnackMessage] = React.useState('');\n  const [openSnack, setOpenSnack] = React.useState(false);\n\n  const handleSnackClose = () => {\n    setOpenSnack(!openSnack);\n  };\n\n  function editDisease() {\n    if (diseaseName === \"\" || diseaseName === undefined || virusName === \"\" || virusName === undefined || varientName === \"\" || varientName === undefined) {\n      setSnackMessage('Fields cannot be blank');\n      setOpenSnack(true);\n    } else {\n      editDiseases(diseaseId, diseaseName, virusName, varientName).then(resp => {\n        console.log(resp);\n\n        if (resp.status === 500) {\n          setSnackMessage('Error occured while update disease');\n          setOpenSnack(true);\n        } else {\n          let data = resp.data;\n          console.log(data);\n          setSnackMessage('Disease updated successfully');\n          setOpenSnack(true);\n          editDiseaseModal();\n        }\n      });\n    }\n  }\n\n  const handleDiseaseNameChange = e => {\n    setDiseaseName(e.target.value);\n  };\n\n  const handleVirusNameChange = e => {\n    setVirusName(e.target.value);\n  };\n\n  const handleVarientNameChange = e => {\n    setVarientName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            variant: \"standard\",\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"standard-adornment-fname\",\n              children: \"Update Disease Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"standard-adornment-fname\",\n              type: 'text',\n              value: diseaseName,\n              onChange: handleDiseaseNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            variant: \"standard\",\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"standard-adornment-fname\",\n              children: \"Update Virus Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"standard-adornment-fname\",\n              type: 'text',\n              value: virusName,\n              onChange: handleVirusNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            variant: \"standard\",\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"standard-adornment-fname\",\n              children: \"Update Varient Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"standard-adornment-fname\",\n              type: 'text',\n              value: varientName,\n              onChange: handleVarientNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            style: {\n              backgroundColor: \"green\"\n            },\n            onClick: editDisease,\n            children: \"\\xA0UPDATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      style: {\n        whiteSpace: 'pre-wrap',\n        width: '300px',\n        top: '50%',\n        bottom: '50%',\n        left: '40%',\n        right: '50%'\n      },\n      autoHideDuration: 3000,\n      anchorOrigin: {\n        vertical: \"center\",\n        horizontal: \"center\"\n      },\n      open: openSnack,\n      onClose: handleSnackClose,\n      message: snackMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditDisease, \"r4O5U7byDWttP6L8YoOcUiePkEA=\");\n\n_c = EditDisease;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDisease\");","map":{"version":3,"names":["FormControl","Grid","Input","InputLabel","Snackbar","Button","DialogActions","DialogContent","React","editDiseases","EditDisease","editDiseaseModal","diseaseId","diseaseNameFromDb","virusNameFromDb","varientNameFromDb","diseaseName","setDiseaseName","useState","virusName","setVirusName","varientName","setVarientName","snackMessage","setSnackMessage","openSnack","setOpenSnack","handleSnackClose","editDisease","undefined","then","resp","console","log","status","data","handleDiseaseNameChange","e","target","value","handleVirusNameChange","handleVarientNameChange","textAlign","backgroundColor","whiteSpace","width","top","bottom","left","right","vertical","horizontal"],"sources":["C:/Users/SREENA/Downloads/UI_Backend/CvdTrackerUI/src/components/editDisease.jsx"],"sourcesContent":["import { FormControl, Grid, Input, InputLabel, Snackbar } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport * as React from 'react';\r\nimport { editDiseases } from '../util/apiCalls';\r\n\r\nexport default function EditDisease({ editDiseaseModal, diseaseId, diseaseNameFromDb, virusNameFromDb, varientNameFromDb }) {\r\n    const [diseaseName, setDiseaseName] = React.useState(diseaseNameFromDb);\r\n    const [virusName, setVirusName] = React.useState(virusNameFromDb);\r\n    const [varientName, setVarientName] = React.useState(varientNameFromDb);\r\n\r\n    const [snackMessage, setSnackMessage] = React.useState('');\r\n    const [openSnack, setOpenSnack] = React.useState(false);\r\n    const handleSnackClose = () => {\r\n        setOpenSnack(!openSnack);\r\n    };\r\n    function editDisease() {\r\n        if (diseaseName === \"\" || diseaseName === undefined || virusName === \"\" || virusName === undefined || varientName === \"\" || varientName === undefined\r\n        ) {\r\n            setSnackMessage('Fields cannot be blank');\r\n            setOpenSnack(true);\r\n        } else {\r\n            editDiseases(diseaseId, diseaseName, virusName, varientName).then(resp => {\r\n                console.log(resp);\r\n                if (resp.status === 500) {\r\n                    setSnackMessage('Error occured while update disease');\r\n                    setOpenSnack(true);\r\n                } else {\r\n                    let data = resp.data;\r\n                    console.log(data);\r\n                    setSnackMessage('Disease updated successfully');\r\n                    setOpenSnack(true);\r\n                    editDiseaseModal();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const handleDiseaseNameChange = (e) => {\r\n        setDiseaseName(e.target.value);\r\n    };\r\n    const handleVirusNameChange = (e) => {\r\n        setVirusName(e.target.value);\r\n    };\r\n    const handleVarientNameChange = (e) => {\r\n        setVarientName(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container >\r\n                <Grid xs={12}>\r\n                    <DialogContent>\r\n                        <FormControl required={true} fullWidth variant=\"standard\" style={{ textAlign: 'center' }}>\r\n                            <InputLabel htmlFor=\"standard-adornment-fname\">Update Disease Name</InputLabel>\r\n                            <Input\r\n                                id=\"standard-adornment-fname\"\r\n                                type={'text'}\r\n                                value={diseaseName}\r\n                                onChange={handleDiseaseNameChange}\r\n                            />\r\n                        </FormControl>\r\n                        <br></br><br></br>\r\n\r\n                        <FormControl required={true} fullWidth variant=\"standard\" style={{ textAlign: 'center' }}>\r\n                            <InputLabel htmlFor=\"standard-adornment-fname\">Update Virus Name</InputLabel>\r\n                            <Input\r\n                                id=\"standard-adornment-fname\"\r\n                                type={'text'}\r\n                                value={virusName}\r\n                                onChange={handleVirusNameChange}\r\n                            />\r\n                        </FormControl>\r\n\r\n                        <br></br><br></br>\r\n                        <FormControl required={true} fullWidth variant=\"standard\" style={{ textAlign: 'center' }}>\r\n                            <InputLabel htmlFor=\"standard-adornment-fname\">Update Varient Name</InputLabel>\r\n                            <Input\r\n                                id=\"standard-adornment-fname\"\r\n                                type={'text'}\r\n                                value={varientName}\r\n                                onChange={handleVarientNameChange}\r\n                            />\r\n                        </FormControl>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions align='center'>\r\n                        <Button variant=\"contained\" style={{ backgroundColor: \"green\" }} onClick={editDisease}>&nbsp;UPDATE</Button>\r\n\r\n                        {/* <Typography>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dont have an account? <Button color=\"primary\" onClick={clickSignUp}>Sign up</Button></Typography> */}\r\n                    </DialogActions>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <Snackbar\r\n                style={{ whiteSpace: 'pre-wrap', width: '300px', top: '50%', bottom: '50%', left: '40%', right: '50%' }}\r\n                autoHideDuration={3000}\r\n                anchorOrigin={{\r\n                    vertical: \"center\",\r\n                    horizontal: \"center\"\r\n                }}\r\n                open={openSnack}\r\n                onClose={handleSnackClose}\r\n                message={snackMessage}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,UAAnC,EAA+CC,QAA/C,QAA+D,eAA/D;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;AAEA,eAAe,SAASC,WAAT,OAA6G;EAAA;;EAAA,IAAxF;IAAEC,gBAAF;IAAoBC,SAApB;IAA+BC,iBAA/B;IAAkDC,eAAlD;IAAmEC;EAAnE,CAAwF;EACxH,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,KAAK,CAACU,QAAN,CAAeL,iBAAf,CAAtC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BZ,KAAK,CAACU,QAAN,CAAeJ,eAAf,CAAlC;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCd,KAAK,CAACU,QAAN,CAAeH,iBAAf,CAAtC;EAEA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkChB,KAAK,CAACU,QAAN,CAAe,EAAf,CAAxC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BlB,KAAK,CAACU,QAAN,CAAe,KAAf,CAAlC;;EACA,MAAMS,gBAAgB,GAAG,MAAM;IAC3BD,YAAY,CAAC,CAACD,SAAF,CAAZ;EACH,CAFD;;EAGA,SAASG,WAAT,GAAuB;IACnB,IAAIZ,WAAW,KAAK,EAAhB,IAAsBA,WAAW,KAAKa,SAAtC,IAAmDV,SAAS,KAAK,EAAjE,IAAuEA,SAAS,KAAKU,SAArF,IAAkGR,WAAW,KAAK,EAAlH,IAAwHA,WAAW,KAAKQ,SAA5I,EACE;MACEL,eAAe,CAAC,wBAAD,CAAf;MACAE,YAAY,CAAC,IAAD,CAAZ;IACH,CAJD,MAIO;MACHjB,YAAY,CAACG,SAAD,EAAYI,WAAZ,EAAyBG,SAAzB,EAAoCE,WAApC,CAAZ,CAA6DS,IAA7D,CAAkEC,IAAI,IAAI;QACtEC,OAAO,CAACC,GAAR,CAAYF,IAAZ;;QACA,IAAIA,IAAI,CAACG,MAAL,KAAgB,GAApB,EAAyB;UACrBV,eAAe,CAAC,oCAAD,CAAf;UACAE,YAAY,CAAC,IAAD,CAAZ;QACH,CAHD,MAGO;UACH,IAAIS,IAAI,GAAGJ,IAAI,CAACI,IAAhB;UACAH,OAAO,CAACC,GAAR,CAAYE,IAAZ;UACAX,eAAe,CAAC,8BAAD,CAAf;UACAE,YAAY,CAAC,IAAD,CAAZ;UACAf,gBAAgB;QACnB;MACJ,CAZD;IAaH;EACJ;;EACD,MAAMyB,uBAAuB,GAAIC,CAAD,IAAO;IACnCpB,cAAc,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;EACH,CAFD;;EAGA,MAAMC,qBAAqB,GAAIH,CAAD,IAAO;IACjCjB,YAAY,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;EACH,CAFD;;EAGA,MAAME,uBAAuB,GAAIJ,CAAD,IAAO;IACnCf,cAAc,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;EACH,CAFD;;EAIA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,IAAD;MAAM,SAAS,MAAf;MAAA,uBACI,QAAC,IAAD;QAAM,EAAE,EAAE,EAAV;QAAA,wBACI,QAAC,aAAD;UAAA,wBACI,QAAC,WAAD;YAAa,QAAQ,EAAE,IAAvB;YAA6B,SAAS,MAAtC;YAAuC,OAAO,EAAC,UAA/C;YAA0D,KAAK,EAAE;cAAEG,SAAS,EAAE;YAAb,CAAjE;YAAA,wBACI,QAAC,UAAD;cAAY,OAAO,EAAC,0BAApB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,KAAD;cACI,EAAE,EAAC,0BADP;cAEI,IAAI,EAAE,MAFV;cAGI,KAAK,EAAE1B,WAHX;cAII,QAAQ,EAAEoB;YAJd;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAUI;YAAA;YAAA;YAAA;UAAA,QAVJ,eAUa;YAAA;YAAA;YAAA;UAAA,QAVb,eAYI,QAAC,WAAD;YAAa,QAAQ,EAAE,IAAvB;YAA6B,SAAS,MAAtC;YAAuC,OAAO,EAAC,UAA/C;YAA0D,KAAK,EAAE;cAAEM,SAAS,EAAE;YAAb,CAAjE;YAAA,wBACI,QAAC,UAAD;cAAY,OAAO,EAAC,0BAApB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,KAAD;cACI,EAAE,EAAC,0BADP;cAEI,IAAI,EAAE,MAFV;cAGI,KAAK,EAAEvB,SAHX;cAII,QAAQ,EAAEqB;YAJd;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAZJ,eAsBI;YAAA;YAAA;YAAA;UAAA,QAtBJ,eAsBa;YAAA;YAAA;YAAA;UAAA,QAtBb,eAuBI,QAAC,WAAD;YAAa,QAAQ,EAAE,IAAvB;YAA6B,SAAS,MAAtC;YAAuC,OAAO,EAAC,UAA/C;YAA0D,KAAK,EAAE;cAAEE,SAAS,EAAE;YAAb,CAAjE;YAAA,wBACI,QAAC,UAAD;cAAY,OAAO,EAAC,0BAApB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,KAAD;cACI,EAAE,EAAC,0BADP;cAEI,IAAI,EAAE,MAFV;cAGI,KAAK,EAAErB,WAHX;cAII,QAAQ,EAAEoB;YAJd;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAvBJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAmCI,QAAC,aAAD;UAAe,KAAK,EAAC,QAArB;UAAA,uBACI,QAAC,MAAD;YAAQ,OAAO,EAAC,WAAhB;YAA4B,KAAK,EAAE;cAAEE,eAAe,EAAE;YAAnB,CAAnC;YAAiE,OAAO,EAAEf,WAA1E;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAnCJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eA6CI,QAAC,QAAD;MACI,KAAK,EAAE;QAAEgB,UAAU,EAAE,UAAd;QAA0BC,KAAK,EAAE,OAAjC;QAA0CC,GAAG,EAAE,KAA/C;QAAsDC,MAAM,EAAE,KAA9D;QAAqEC,IAAI,EAAE,KAA3E;QAAkFC,KAAK,EAAE;MAAzF,CADX;MAEI,gBAAgB,EAAE,IAFtB;MAGI,YAAY,EAAE;QACVC,QAAQ,EAAE,QADA;QAEVC,UAAU,EAAE;MAFF,CAHlB;MAOI,IAAI,EAAE1B,SAPV;MAQI,OAAO,EAAEE,gBARb;MASI,OAAO,EAAEJ;IATb;MAAA;MAAA;MAAA;IAAA,QA7CJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA2DH;;GApGuBb,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}