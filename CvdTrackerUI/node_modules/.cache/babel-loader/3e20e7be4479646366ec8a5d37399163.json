{"ast":null,"code":"import axios from 'axios'; //This file is one -> it have all backend API calls\n\nconst BACKEND_APP_URL = \"http://localhost:8082/api\";\nexport const login = (email, password) => {\n  return axios({\n    url: BACKEND_APP_URL + \"/signin\",\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: JSON.stringify({\n      \"email\": email,\n      \"password\": password\n    })\n  });\n};\nexport const registerUser = (fname, lname, email, password, cnumber, role) => {\n  console.log(\"register user called\" + JSON.stringify({\n    \"firstName\": fname,\n    \"lastName\": lname,\n    \"password\": password,\n    \"email\": email,\n    \"mobile\": cnumber,\n    \"role\": role\n  }));\n  return axios({\n    url: BACKEND_APP_URL + \"/register\",\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: JSON.stringify({\n      \"firstName\": fname,\n      \"lastName\": lname,\n      \"password\": password,\n      \"email\": email,\n      \"mobile\": cnumber,\n      \"role\": role\n    })\n  });\n};\nexport const getAllPatientsHistory = () => {\n  return axios({\n    url: BACKEND_APP_URL + \"/view\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: \"GET\"\n  });\n};\nexport const addDisease = (diseaseName, virusName, diseaseVarient) => {\n  console.log(\"addDisease called\" + JSON.stringify({\n    \"diseaseName\": diseaseName,\n    \"virusName\": virusName,\n    \"diseaseVarient\": diseaseVarient,\n    \"userId\": localStorage.getItem(\"userId\")\n  }));\n  return axios({\n    url: BACKEND_APP_URL + \"/disease\",\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: JSON.stringify({\n      \"name\": diseaseName,\n      \"virusName\": virusName,\n      \"varient\": diseaseVarient,\n      \"userId\": localStorage.getItem(\"userId\")\n    })\n  });\n};\nexport const editDiseases = (diseaseId, diseaseName, virusName, diseaseVarient) => {\n  console.log(\"editDiseases called\" + JSON.stringify({\n    \"diseaseName\": diseaseName,\n    \"virusName\": virusName,\n    \"diseaseVarient\": diseaseVarient,\n    \"userId\": localStorage.getItem(\"userId\")\n  }));\n  return axios({\n    url: BACKEND_APP_URL + \"/disease/\" + diseaseId,\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: JSON.stringify({\n      \"name\": diseaseName,\n      \"virusName\": virusName,\n      \"varient\": diseaseVarient,\n      \"userId\": localStorage.getItem(\"userId\")\n    })\n  });\n};\nexport const getAllDiseases = () => {\n  return axios({\n    url: BACKEND_APP_URL + \"/disease\",\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const getAllHospitals = () => {\n  return axios({\n    url: BACKEND_APP_URL + \"/hospital\",\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const searchHospitals = (selectedZone, selectedType, isFreeBeds, isGeneralBeds, isICUBeds) => {\n  return axios({\n    url: BACKEND_APP_URL + \"/hospital?zone=\" + selectedZone + \"&type=\" + selectedType + \"&freebeds=\" + isFreeBeds + \"&generalBeds=\" + isGeneralBeds + \"&icuBeds=\" + isICUBeds,\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const getHospitalById = id => {\n  return axios({\n    url: BACKEND_APP_URL + \"/hospital/\" + id,\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const deleteDiseases = id => {\n  return axios({\n    url: BACKEND_APP_URL + \"/disease/\" + id + \"/\" + localStorage.getItem(\"userId\"),\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const deleteHospitals = id => {\n  return axios({\n    url: BACKEND_APP_URL + \"/hospital/\" + id + \"/\" + localStorage.getItem(\"userId\"),\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const editHospitals = (hospitalId, freeBeds, generalBeds, icuBeds) => {\n  console.log(\"editHospitals called\" + JSON.stringify({\n    \"icuBeds\": icuBeds,\n    \"freeBeds\": freeBeds,\n    \"generalBeds\": generalBeds,\n    \"userId\": localStorage.getItem(\"userId\")\n  }));\n  return axios({\n    url: BACKEND_APP_URL + \"/hospital/\" + hospitalId + \"/\" + localStorage.getItem(\"userId\"),\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: JSON.stringify({\n      \"icuBeds\": icuBeds,\n      \"freeBeds\": freeBeds,\n      \"generalBeds\": generalBeds\n    })\n  });\n};\nexport const addHospital = (hospitalName, hospitalType, zone, freeBeds, generalBeds, icuBeds, street, city, state, diseases) => {\n  console.log(\"addHospital called\" + JSON.stringify({\n    \"userId\": localStorage.getItem(\"userId\"),\n    \"hospitalName\": hospitalName,\n    \"hospitalType\": hospitalType,\n    \"zone\": zone,\n    \"freeBeds\": freeBeds,\n    \"generalBeds\": generalBeds,\n    \"icuBeds\": icuBeds,\n    \"street\": street,\n    \"city\": city,\n    \"state\": state,\n    \"diseaseList\": diseases\n  }));\n  return axios({\n    url: BACKEND_APP_URL + \"/hospital\",\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: JSON.stringify({\n      \"userId\": localStorage.getItem(\"userId\"),\n      \"hospitalName\": hospitalName,\n      \"hospitalType\": hospitalType,\n      \"zone\": zone,\n      \"freeBeds\": freeBeds,\n      \"generalBeds\": generalBeds,\n      \"icuBeds\": icuBeds,\n      \"street\": street,\n      \"city\": city,\n      \"state\": state,\n      \"diseaseList\": diseases\n    })\n  });\n};\nexport const addPatients = (patientName, patientStatus, age, labtest, hospitalId, diseaseId, street, city, state) => {\n  console.log(\"addPatients called\" + JSON.stringify({\n    \"userId\": localStorage.getItem(\"userId\"),\n    \"name\": patientName,\n    \"age\": age,\n    \"status\": patientStatus,\n    \"labTest\": labtest,\n    \"hospitalId\": hospitalId,\n    \"diseaseId\": diseaseId,\n    \"street\": street,\n    \"city\": city,\n    \"state\": state\n  }));\n  return axios({\n    url: BACKEND_APP_URL + \"/patient\",\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: JSON.stringify({\n      \"userId\": localStorage.getItem(\"userId\"),\n      \"name\": patientName,\n      \"age\": age,\n      \"status\": patientStatus,\n      \"labTest\": labtest,\n      \"hospitalId\": hospitalId,\n      \"diseaseId\": diseaseId,\n      \"street\": street,\n      \"city\": city,\n      \"state\": state\n    })\n  });\n};\nexport const editPatients = (patientStatus, labtest, patientId) => {\n  console.log(\"editPatients called\" + JSON.stringify({\n    \"status\": patientStatus,\n    \"labTest\": labtest\n  }));\n  return axios({\n    url: BACKEND_APP_URL + \"/patient/\" + patientId + \"/\" + localStorage.getItem(\"userId\"),\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: JSON.stringify({\n      \"status\": patientStatus,\n      \"labTest\": labtest\n    })\n  });\n};\nexport const getAllCategory = () => {\n  return fetch(BACKEND_APP_URL + \"/productlines\", {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const getAllCategoryForPage = () => {\n  return fetch(BACKEND_APP_URL + \"/productlines/all\", {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const addCategory = (productline, description) => {\n  return fetch(BACKEND_APP_URL + \"/productlines\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"productline\": productline,\n      \"description\": description\n    })\n  });\n};\nexport const editCategorys = (productline, eproductline, edescription) => {\n  return fetch(BACKEND_APP_URL + \"/productlines/\" + productline, {\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"productLine\": eproductline,\n      \"textDescription\": edescription\n    })\n  });\n};\nexport const deleteCategorys = productline => {\n  return fetch(BACKEND_APP_URL + \"/productlines/\" + productline, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const addItemsInCart = (productCode, count) => {\n  let cartId = localStorage.getItem(\"cartId\");\n  let customerNumber = localStorage.getItem(\"customerNumber\");\n  return fetch(BACKEND_APP_URL + \"/cart-item/add\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"customerNumber\": customerNumber,\n      \"cartId\": cartId,\n      \"productCode\": productCode,\n      \"count\": count\n    })\n  });\n};\nexport const addProducts = (productCode, productName, productLine, productScale, productVendor, productDescription, quantityInStock, buyPrice, MSRP) => {\n  return fetch(BACKEND_APP_URL + \"/products\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"productCode\": productCode,\n      \"productName\": productName,\n      \"productLine\": productLine,\n      \"productScale\": productScale,\n      \"productVendor\": productVendor,\n      \"productDescription\": productDescription,\n      \"quantityInStock\": quantityInStock,\n      \"buyPrice\": buyPrice,\n      \"MSRP\": MSRP\n    })\n  });\n};\nexport const editProducts = (productCodeFromDb, productCode, productName, productLine, productScale, productVendor, productDescription, quantityInStock, buyPrice, MSRP) => {\n  return fetch(BACKEND_APP_URL + \"/products/\" + productCodeFromDb, {\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"productCode\": productCode,\n      \"productName\": productName,\n      \"productLine\": productLine,\n      \"productScale\": productScale,\n      \"productVendor\": productVendor,\n      \"productDescription\": productDescription,\n      \"quantityInStock\": quantityInStock,\n      \"buyPrice\": buyPrice,\n      \"MSRP\": MSRP\n    })\n  });\n};\nexport const deleteProducts = productCode => {\n  return fetch(BACKEND_APP_URL + \"/products/\" + productCode, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const checkout = () => {\n  let cartId = localStorage.getItem(\"cartId\");\n  let customerNumber = localStorage.getItem(\"customerNumber\");\n  return fetch(BACKEND_APP_URL + \"/orders\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"customerNumber\": customerNumber,\n      \"cartId\": cartId\n    })\n  });\n};\nexport const checkoutPay = (checkNumber, amount) => {\n  let customerNumber = localStorage.getItem(\"customerNumber\");\n  return fetch(BACKEND_APP_URL + \"/payments\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"customerNumber\": customerNumber,\n      \"checkNumber\": checkNumber,\n      \"amount\": amount\n    })\n  });\n};\nexport const removeItemsInCart = productCode => {\n  let cartId = localStorage.getItem(\"cartId\");\n  let customerNumber = localStorage.getItem(\"customerNumber\");\n  return fetch(BACKEND_APP_URL + \"/cart-item/remove\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"customerNumber\": customerNumber,\n      \"cartId\": cartId,\n      \"productCode\": productCode\n    })\n  });\n}; // export const registerUser = (name, email,password) => {\n//   console.log(\"register user called\"+JSON.stringify({\n//                   \"name\":name,\n//                   \"password\":password,\n//                   \"email\":email,\n//                   }));\n//     return fetch(BACKEND_APP_URL+\"/register\", {\n//             method: \"POST\",\n//             headers: {'Content-Type': 'application/json'},\n//             body: JSON.stringify({\n//               \"name\":name,\n//                   \"password\":password,\n//                   \"email\":email,\n//               })\n//           });\n// }\n// export const editUsers = (name, username,password, mobileNumber, accountNumber) => {\n//   console.log(\"register user called\"+JSON.stringify({\n//                 \"name\":name,\n//                 \"username\":username,\n//                 \"password\":password,\n//                 \"cnumber\":mobileNumber,\n//                 \"accNo\":accountNumber\n//                 }));\n//   return fetch(BACKEND_APP_URL+\"/editUser?id=\"+localStorage.getItem(\"id\"), {\n//           method: \"PUT\",\n//           headers: {'Content-Type': 'application/json'},\n//           body: JSON.stringify({\n//                 \"name\":name,\n//                 \"username\":username,\n//                 \"password\":password,\n//                 \"cnumber\":mobileNumber,\n//                 \"accNo\":accountNumber\n//             })\n//         });\n// }\n\nexport const getAllProducts = (category, name, pageNumber) => {\n  return fetch(BACKEND_APP_URL + \"/products?category=\" + category + \"&product=\" + name + \"&pageNo=\" + (pageNumber - 1), {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).catch(error => {\n    console.log(\"Error while getAllProducts\");\n  });\n};\nexport const savePost = (title, description, file) => {\n  const data = new FormData();\n  data.append('image', file);\n  data.append('postName', title);\n  data.append('description', description);\n  data.append('name', localStorage.getItem('name'));\n  data.append('userId', localStorage.getItem('id'));\n  return fetch(BACKEND_APP_URL + \"/post\", {\n    method: \"POST\",\n    //headers: {'Accept': 'application/json', 'Content-Type': 'multipart/form-data;'},\n    body: data\n  });\n};\nexport const getPost = postId => {\n  return fetch(BACKEND_APP_URL + \"/post/\" + postId, {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).catch(error => {\n    console.log(\"Error while getAllUsers\");\n  });\n};\nexport const postComment = (postId, comment) => {\n  return fetch(BACKEND_APP_URL + \"/comment\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"postId\": postId,\n      \"comment\": comment,\n      \"userId\": localStorage.getItem('id'),\n      \"name\": localStorage.getItem('name')\n    })\n  }).catch(error => {\n    console.log(\"Error while getAllUsers\");\n  });\n};","map":{"version":3,"names":["axios","BACKEND_APP_URL","login","email","password","url","method","headers","data","JSON","stringify","registerUser","fname","lname","cnumber","role","console","log","getAllPatientsHistory","addDisease","diseaseName","virusName","diseaseVarient","localStorage","getItem","editDiseases","diseaseId","getAllDiseases","getAllHospitals","searchHospitals","selectedZone","selectedType","isFreeBeds","isGeneralBeds","isICUBeds","getHospitalById","id","deleteDiseases","deleteHospitals","editHospitals","hospitalId","freeBeds","generalBeds","icuBeds","addHospital","hospitalName","hospitalType","zone","street","city","state","diseases","addPatients","patientName","patientStatus","age","labtest","editPatients","patientId","getAllCategory","fetch","getAllCategoryForPage","addCategory","productline","description","body","editCategorys","eproductline","edescription","deleteCategorys","addItemsInCart","productCode","count","cartId","customerNumber","addProducts","productName","productLine","productScale","productVendor","productDescription","quantityInStock","buyPrice","MSRP","editProducts","productCodeFromDb","deleteProducts","checkout","checkoutPay","checkNumber","amount","removeItemsInCart","getAllProducts","category","name","pageNumber","catch","error","savePost","title","file","FormData","append","getPost","postId","postComment","comment"],"sources":["C:/Users/SREENA/Downloads/UI_Backend/CvdTrackerUI/src/util/apiCalls.js"],"sourcesContent":["import axios from 'axios';  \r\n//This file is one -> it have all backend API calls\r\nconst BACKEND_APP_URL = \"http://localhost:8082/api\";\r\n\r\n\r\nexport const login = (email,password) => {\r\n    return axios({\r\n            url: BACKEND_APP_URL+\"/signin\",\r\n            method: \"POST\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            data: JSON.stringify({\r\n              \"email\":email,\r\n              \"password\":password\r\n              })\r\n          });\r\n}\r\n\r\nexport const registerUser = (fname, lname, email, password, cnumber, role) => {\r\n  console.log(\"register user called\"+JSON.stringify({\r\n                  \"firstName\":fname,\r\n                  \"lastName\":lname,\r\n                  \"password\":password,\r\n                  \"email\":email,\r\n                  \"mobile\":cnumber,\r\n                  \"role\":role\r\n                  }));\r\n    return axios({\r\n            url: BACKEND_APP_URL+\"/register\", \r\n            method: \"POST\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            data: JSON.stringify({\r\n                  \"firstName\":fname,\r\n                  \"lastName\":lname,\r\n                  \"password\":password,\r\n                  \"email\":email,\r\n                  \"mobile\":cnumber,\r\n                  \"role\":role\r\n              })\r\n          });\r\n}\r\nexport const getAllPatientsHistory = () => {\r\n  return axios({\r\n    url: BACKEND_APP_URL+\"/view\", \r\n    headers: {'Content-Type': 'application/json'},\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport const addDisease = (diseaseName, virusName, diseaseVarient) => {\r\n  console.log(\"addDisease called\"+JSON.stringify({\r\n                  \"diseaseName\":diseaseName,\r\n                  \"virusName\":virusName,\r\n                  \"diseaseVarient\":diseaseVarient,\r\n                  \"userId\":localStorage.getItem(\"userId\")\r\n                  }));\r\n    return axios({\r\n            url: BACKEND_APP_URL+\"/disease\", \r\n            method: \"POST\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            data: JSON.stringify({\r\n              \"name\":diseaseName,\r\n              \"virusName\":virusName,\r\n              \"varient\":diseaseVarient,\r\n              \"userId\":localStorage.getItem(\"userId\")\r\n              })\r\n          });\r\n}\r\n\r\nexport const editDiseases = (diseaseId, diseaseName, virusName, diseaseVarient) => {\r\n  console.log(\"editDiseases called\"+JSON.stringify({\r\n                  \"diseaseName\":diseaseName,\r\n                  \"virusName\":virusName,\r\n                  \"diseaseVarient\":diseaseVarient,\r\n                  \"userId\":localStorage.getItem(\"userId\")\r\n                  }));\r\n    return axios({\r\n            url: BACKEND_APP_URL+\"/disease/\"+diseaseId, \r\n            method: \"PUT\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            data: JSON.stringify({\r\n              \"name\":diseaseName,\r\n              \"virusName\":virusName,\r\n              \"varient\":diseaseVarient,\r\n              \"userId\":localStorage.getItem(\"userId\")\r\n              })\r\n          });\r\n}\r\n\r\nexport const getAllDiseases = () => {\r\n  return axios({\r\n          url: BACKEND_APP_URL+\"/disease\", \r\n          method: \"GET\",\r\n          headers: {'Content-Type': 'application/json'}\r\n        });\r\n}\r\n\r\nexport const getAllHospitals = () => {\r\n  return axios({\r\n          url: BACKEND_APP_URL+\"/hospital\", \r\n          method: \"GET\",\r\n          headers: {'Content-Type': 'application/json'}\r\n        });\r\n}\r\n\r\nexport const searchHospitals = (selectedZone, selectedType, isFreeBeds, isGeneralBeds, isICUBeds) => {\r\n  return axios({\r\n          url: BACKEND_APP_URL+\"/hospital?zone=\"+selectedZone+\"&type=\"+selectedType+\"&freebeds=\"+isFreeBeds+\"&generalBeds=\"+isGeneralBeds+\"&icuBeds=\"+isICUBeds, \r\n          method: \"GET\",\r\n          headers: {'Content-Type': 'application/json'}\r\n        });\r\n}\r\n\r\nexport const getHospitalById = (id) => {\r\n  return axios({\r\n    url: BACKEND_APP_URL+\"/hospital/\"+id, \r\n    method: \"GET\",\r\n    headers: {'Content-Type': 'application/json'}\r\n  });\r\n}\r\n\r\nexport const deleteDiseases = (id) => {\r\n  return axios({\r\n    url: BACKEND_APP_URL+\"/disease/\"+id+\"/\"+localStorage.getItem(\"userId\"), \r\n    method: \"DELETE\",\r\n    headers: {'Content-Type': 'application/json'}\r\n  });\r\n}\r\n\r\nexport const deleteHospitals = (id) => {\r\n  return axios({\r\n    url: BACKEND_APP_URL+\"/hospital/\"+id+\"/\"+localStorage.getItem(\"userId\"), \r\n    method: \"DELETE\",\r\n    headers: {'Content-Type': 'application/json'}\r\n  });\r\n}\r\n\r\nexport const editHospitals = (hospitalId, freeBeds, generalBeds, icuBeds) => {\r\n  console.log(\"editHospitals called\"+JSON.stringify({\r\n                  \"icuBeds\":icuBeds,\r\n                  \"freeBeds\":freeBeds,\r\n                  \"generalBeds\":generalBeds,\r\n                  \"userId\":localStorage.getItem(\"userId\")\r\n                  }));\r\n    return axios({\r\n            url: BACKEND_APP_URL+\"/hospital/\"+hospitalId+\"/\"+localStorage.getItem(\"userId\"), \r\n            method: \"PUT\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            data: JSON.stringify({\r\n              \"icuBeds\":icuBeds,\r\n              \"freeBeds\":freeBeds,\r\n              \"generalBeds\":generalBeds,\r\n              })\r\n          });\r\n}\r\nexport const addHospital = (hospitalName, hospitalType, zone, freeBeds, generalBeds, icuBeds,\r\n  street, city, state, diseases) => {\r\n  console.log(\"addHospital called\"+JSON.stringify({\r\n                  \"userId\":localStorage.getItem(\"userId\"),\r\n                  \"hospitalName\":hospitalName,\r\n                  \"hospitalType\":hospitalType,\r\n                  \"zone\":zone,\r\n                  \"freeBeds\":freeBeds,\r\n                  \"generalBeds\":generalBeds,\r\n                  \"icuBeds\":icuBeds,\r\n                  \"street\":street,\r\n                  \"city\":city,\r\n                  \"state\":state,\r\n                  \"diseaseList\":diseases\r\n                  }));\r\n    return axios({\r\n            url: BACKEND_APP_URL+\"/hospital\", \r\n            method: \"POST\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            data: JSON.stringify({\r\n              \"userId\":localStorage.getItem(\"userId\"),\r\n              \"hospitalName\":hospitalName,\r\n              \"hospitalType\":hospitalType,\r\n              \"zone\":zone,\r\n              \"freeBeds\":freeBeds,\r\n              \"generalBeds\":generalBeds,\r\n              \"icuBeds\":icuBeds,\r\n              \"street\":street,\r\n              \"city\":city,\r\n              \"state\":state,\r\n              \"diseaseList\":diseases\r\n              })\r\n          });\r\n}\r\nexport const addPatients = (patientName, patientStatus, age, labtest, hospitalId, diseaseId,\r\n  street, city, state) => {\r\n  console.log(\"addPatients called\"+JSON.stringify({\r\n                  \"userId\":localStorage.getItem(\"userId\"),\r\n                  \"name\":patientName,\r\n                  \"age\":age,\r\n                  \"status\":patientStatus,\r\n                  \"labTest\":labtest,\r\n                  \"hospitalId\":hospitalId,\r\n                  \"diseaseId\":diseaseId,\r\n                  \"street\":street,\r\n                  \"city\":city,\r\n                  \"state\":state\r\n                  }));\r\n    return axios({\r\n            url: BACKEND_APP_URL+\"/patient\", \r\n            method: \"POST\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            data: JSON.stringify({\r\n              \"userId\":localStorage.getItem(\"userId\"),\r\n                  \"name\":patientName,\r\n                  \"age\":age,\r\n                  \"status\":patientStatus,\r\n                  \"labTest\":labtest,\r\n                  \"hospitalId\":hospitalId,\r\n                  \"diseaseId\":diseaseId,\r\n                  \"street\":street,\r\n                  \"city\":city,\r\n                  \"state\":state\r\n              })\r\n          });\r\n}\r\n\r\nexport const editPatients = (patientStatus, labtest, patientId) => {\r\n  console.log(\"editPatients called\"+JSON.stringify({\r\n                  \"status\":patientStatus,\r\n                  \"labTest\":labtest\r\n                  }));\r\n    return axios({\r\n            url: BACKEND_APP_URL+\"/patient/\"+patientId+\"/\"+localStorage.getItem(\"userId\"), \r\n            method: \"PUT\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            data: JSON.stringify({\r\n              \"status\":patientStatus,\r\n              \"labTest\":labtest\r\n              })\r\n          });\r\n}\r\nexport const getAllCategory = () => {\r\n  return fetch(BACKEND_APP_URL+\"/productlines\", {\r\n          method: \"GET\",\r\n          headers: {'Content-Type': 'application/json'}\r\n        });\r\n}\r\n\r\nexport const getAllCategoryForPage = () => {\r\n  return fetch(BACKEND_APP_URL+\"/productlines/all\", {\r\n          method: \"GET\",\r\n          headers: {'Content-Type': 'application/json'}\r\n        });\r\n}\r\nexport const addCategory = (productline, description) => {\r\n  return fetch(BACKEND_APP_URL+\"/productlines\", {\r\n          method: \"POST\",\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            \"productline\":productline,\r\n            \"description\":description\r\n            })\r\n        });\r\n}\r\nexport const editCategorys = (productline,eproductline, edescription) => {\r\n  return fetch(BACKEND_APP_URL+\"/productlines/\"+productline, {\r\n          method: \"PUT\",\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            \"productLine\":eproductline,\r\n            \"textDescription\":edescription\r\n            })\r\n        });\r\n}\r\n\r\nexport const deleteCategorys = (productline) => {\r\n  return fetch(BACKEND_APP_URL+\"/productlines/\"+productline, {\r\n          method: \"DELETE\",\r\n          headers: {'Content-Type': 'application/json'}\r\n        });\r\n}\r\n\r\nexport const addItemsInCart = (productCode, count) => {\r\n  let cartId = localStorage.getItem(\"cartId\");\r\n  let customerNumber = localStorage.getItem(\"customerNumber\");\r\n  return fetch(BACKEND_APP_URL+\"/cart-item/add\", {\r\n          method: \"POST\",\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            \"customerNumber\":customerNumber,\r\n            \"cartId\":cartId,\r\n            \"productCode\":productCode,\r\n            \"count\":count,\r\n            })\r\n        });\r\n}\r\n\r\nexport const addProducts = (productCode, productName, productLine, productScale, productVendor,productDescription,quantityInStock,\r\n  buyPrice, MSRP) => {\r\n  return fetch(BACKEND_APP_URL+\"/products\", {\r\n          method: \"POST\",\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            \"productCode\":productCode,\r\n            \"productName\":productName,\r\n            \"productLine\":productLine,\r\n            \"productScale\":productScale,\r\n            \"productVendor\":productVendor,\r\n            \"productDescription\":productDescription,\r\n            \"quantityInStock\":quantityInStock,\r\n            \"buyPrice\":buyPrice,\r\n            \"MSRP\":MSRP\r\n            })\r\n        });\r\n}\r\n\r\nexport const editProducts = (productCodeFromDb, productCode, productName, productLine, productScale, productVendor,productDescription,quantityInStock,\r\n  buyPrice, MSRP) => {\r\n  return fetch(BACKEND_APP_URL+\"/products/\"+productCodeFromDb, {\r\n          method: \"PUT\",\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            \"productCode\":productCode,\r\n            \"productName\":productName,\r\n            \"productLine\":productLine,\r\n            \"productScale\":productScale,\r\n            \"productVendor\":productVendor,\r\n            \"productDescription\":productDescription,\r\n            \"quantityInStock\":quantityInStock,\r\n            \"buyPrice\":buyPrice,\r\n            \"MSRP\":MSRP\r\n            })\r\n        });\r\n}\r\n\r\nexport const deleteProducts = (productCode) => {\r\n  return fetch(BACKEND_APP_URL+\"/products/\"+productCode, {\r\n          method: \"DELETE\",\r\n          headers: {'Content-Type': 'application/json'}\r\n        });\r\n}\r\n\r\n\r\nexport const checkout = () => {\r\n  let cartId = localStorage.getItem(\"cartId\");\r\n  let customerNumber = localStorage.getItem(\"customerNumber\");\r\n  return fetch(BACKEND_APP_URL+\"/orders\", {\r\n          method: \"POST\",\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            \"customerNumber\":customerNumber,\r\n            \"cartId\":cartId\r\n            })\r\n        });\r\n}\r\n\r\nexport const checkoutPay = (checkNumber, amount) => {\r\n  let customerNumber = localStorage.getItem(\"customerNumber\");\r\n  return fetch(BACKEND_APP_URL+\"/payments\", {\r\n          method: \"POST\",\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            \"customerNumber\":customerNumber,\r\n            \"checkNumber\":checkNumber,\r\n            \"amount\":amount,\r\n            })\r\n        });\r\n}\r\n\r\nexport const removeItemsInCart = (productCode) => {\r\n  let cartId = localStorage.getItem(\"cartId\");\r\n  let customerNumber = localStorage.getItem(\"customerNumber\");\r\n  return fetch(BACKEND_APP_URL+\"/cart-item/remove\", {\r\n          method: \"POST\",\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            \"customerNumber\":customerNumber,\r\n            \"cartId\":cartId,\r\n            \"productCode\":productCode\r\n            })\r\n        });\r\n}\r\n\r\n// export const registerUser = (name, email,password) => {\r\n//   console.log(\"register user called\"+JSON.stringify({\r\n//                   \"name\":name,\r\n//                   \"password\":password,\r\n//                   \"email\":email,\r\n//                   }));\r\n//     return fetch(BACKEND_APP_URL+\"/register\", {\r\n//             method: \"POST\",\r\n//             headers: {'Content-Type': 'application/json'},\r\n//             body: JSON.stringify({\r\n//               \"name\":name,\r\n//                   \"password\":password,\r\n//                   \"email\":email,\r\n//               })\r\n//           });\r\n// }\r\n\r\n// export const editUsers = (name, username,password, mobileNumber, accountNumber) => {\r\n//   console.log(\"register user called\"+JSON.stringify({\r\n//                 \"name\":name,\r\n//                 \"username\":username,\r\n//                 \"password\":password,\r\n//                 \"cnumber\":mobileNumber,\r\n//                 \"accNo\":accountNumber\r\n//                 }));\r\n//   return fetch(BACKEND_APP_URL+\"/editUser?id=\"+localStorage.getItem(\"id\"), {\r\n//           method: \"PUT\",\r\n//           headers: {'Content-Type': 'application/json'},\r\n//           body: JSON.stringify({\r\n//                 \"name\":name,\r\n//                 \"username\":username,\r\n//                 \"password\":password,\r\n//                 \"cnumber\":mobileNumber,\r\n//                 \"accNo\":accountNumber\r\n//             })\r\n//         });\r\n// }\r\n\r\nexport const getAllProducts = (category, name, pageNumber) => {\r\n    return fetch(BACKEND_APP_URL+\"/products?category=\"+category+\"&product=\"+name+\"&pageNo=\"+(pageNumber-1), {\r\n            method: \"GET\",\r\n            headers: {'Content-Type': 'application/json'},\r\n          })\r\n          .catch(error=>{\r\n              console.log(\"Error while getAllProducts\");\r\n          })\r\n}\r\n\r\nexport const savePost = (title, description, file) => {\r\n  const data = new FormData();\r\n  \r\n  data.append('image',file );\r\n  data.append('postName', title);\r\n  data.append('description', description);\r\n  data.append('name', localStorage.getItem('name'));\r\n  data.append('userId', localStorage.getItem('id'));\r\n   return fetch(BACKEND_APP_URL+\"/post\", {\r\n        method: \"POST\",\r\n        //headers: {'Accept': 'application/json', 'Content-Type': 'multipart/form-data;'},\r\n        body: data\r\n        });\r\n }\r\n\r\n export const getPost = (postId) => {\r\n  return fetch(BACKEND_APP_URL+\"/post/\"+postId, {\r\n          method: \"GET\",\r\n          headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error while getAllUsers\");\r\n        })\r\n}\r\n\r\nexport const postComment = (postId, comment) => {\r\n  return fetch(BACKEND_APP_URL+\"/comment\", {\r\n          method: \"POST\",\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            \"postId\":postId,\r\n                \"comment\":comment,\r\n                \"userId\":localStorage.getItem('id'),\r\n                \"name\":localStorage.getItem('name'),\r\n            })\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error while getAllUsers\");\r\n        })\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}